/*
 * Cashregister project
 * ===========================
 * File Path : Specialoffer.c
 * Author : M.W.Richardson
 * Date : 19/04/21
 * Copyright : (c) 2021 Liverpool Data Research Associates
 */
/*"LDRA_OPEN   D:\AzureDevOps\Cashregister_6.0\Source\Types.h "*/
/*
 * Cashregister project
 * ===========================
 * File Path : Types.h
 * Author : M.W.Richardson
 * Date : 19/04/21
 * Copyright : (c) 2021 Liverpool Data Research Associates
 */
#ifndef TYPES_H
#define TYPES_H
#include <stdint.h>
/* 32bit float */
typedef float float32_t;
/* plain 8 bit character */
typedef char char_t;
/* pointer to plain 8 bit character */
typedef char* char_pt;
/* pointer to const plain 8 bit character */
typedef const char* const_char_pt;
#endif
/*"LDRA_CLOSE Include File"*/
/*"LDRA_OPEN   D:\AzureDevOps\Cashregister_6.0\Source\Specialoffer.h "*/
/*
 * Cashregister project
 * ===========================
 * File Path : Specialoffer.h
 * Author : M.W.Richardson
 * Date : 19/04/21
 * Copyright : (c) 2021 Liverpool Data Research Associates
 */
#ifndef SPECIALOFFER_H
#define SPECIALOFFER_H
/* Various types of Special Offers available */
typedef enum {
   NO_OFFER, BUY_ONE_GET_ONE_FREE, TEN_PERCENT_OFF, THREE_FOR_ONE_EURO
} tSpecialoffer;
extern uint32_t Specialoffer_getPrice(const uint32_t aQuantity,
 const uint32_t aUnitPrice, const tSpecialoffer anOffer);
#endif
/*"LDRA_CLOSE Include File"*/
/*
 * Get the price which depends on which special offer, if any, is used
 */
uint32_t Specialoffer_getPrice(const uint32_t aQuantity,
 const uint32_t aUnitPrice, const tSpecialoffer anOffer) {
  uint32_t price;
  switch (anOffer) {
    case BUY_ONE_GET_ONE_FREE:
      price = aUnitPrice * ((aQuantity + 1U) >> 1U);
      break;
    case TEN_PERCENT_OFF:
      price = (aUnitPrice * aQuantity * 9U) / 10U;
      break;
    case THREE_FOR_ONE_EURO:
      price = ((aQuantity / 3U) * 100U) + ((aQuantity % 3U) * aUnitPrice);
      break;
      /* no offer */
    default:
      price = aUnitPrice * aQuantity;
      break;
  }
  return price;
}
